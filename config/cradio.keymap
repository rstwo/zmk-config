// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE   = 0
#define EXTRA  = 1
#define TAP    = 2
#define BUTTON = 3
#define NAV    = 4
#define MOUSE  = 5
#define MEDIA  = 6
#define NUM    = 7
#define SYM    = 8
#define FUN    = 9


// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LCTRL k1  &ht LALT k2  &ht LGUI k3  &ht LSHFT k4  
#define HRMR(k1,k2,k3,k4) &ht RSHFT k1  &ht RGUI k2  &ht RALT k3  &ht RCTRL k4
// Thumb row layer tap macro
#define TRLL(k1,k2) &lt 8 k1  &lt 7 k2
#define TRLR(k1,k2) &lt 4 k1  &lt 5 k2


/ {
    // miryoku-style thumb-combos
    combos {
        compatible = "zmk,combos";
        
        combo_lthumb_base {
            timeout-ms = <50>;
            key-positions = <30 31>;
            layers = <0>;
            bindings = <&lt 9 DEL>;
        };
        
        combo_rthumb_base {
            timeout-ms = <50>;
            key-positions = <32 33>;
            layers = <0>;
            bindings = <&lt 6 ESC>;
        };
        
        combo_lthumb_extra {
            timeout-ms = <50>;
            key-positions = <30 31>;
            layers = <1>;
            bindings = <&lt 9 DEL>;
        };
        
        combo_rthumb_extra {
            timeout-ms = <50>;
            key-positions = <32 33>;
            layers = <1>;
            bindings = <&lt 6 ESC>;
        };

        combo_lthumb_button {
            timeout-ms = <50>;
            key-positions = <30 31>;
            layers = <3>;
            bindings = <&mkp MCLK>;
        };
        
        combo_rthumb_button {
            timeout-ms = <50>;
            key-positions = <32 33>;
            layers = <3>;
            bindings = <&mkp MCLK>;
        };
        
        combo_lthumb_nav {
            timeout-ms = <50>;
            key-positions = <30 31>;
            layers = <4>;
            bindings = <&kp DEL>;
        };
        
        combo_lthumb_mouse {
            timeout-ms = <50>;
            key-positions = <30 31>;
            layers = <5>;
            bindings = <&mkp MCLK>;
        };
        
        combo_lthumb_media {
            timeout-ms = <50>;
            key-positions = <30 31>;
            layers = <6>;
            bindings = <&kp C_MUTE>;
        };
        
        combo_rthumb_num {
            timeout-ms = <50>;
            key-positions = <32 33>;
            layers = <7>;
            bindings = <&kp DOT>;
        };
        
        combo_rthumb_sym {
            timeout-ms = <50>;
            key-positions = <32 33>;
            layers = <8>;
            bindings = <&kp RPRN>;
        };
   };

    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

        td_boot: tap_dance_boot {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bootloader>;
        };

        td_tap: tap_dance_tap {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 2>;
        };

        td_extra: tap_dance_extra {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 1>;
        };

        td_base: tap_dance_base {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 0>;
        };

        td_nav: tap_dance_nav {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 4>;
        };

        td_mouse: tap_dance_mouse {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 5>;
        };

        td_sym: tap_dance_sym {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 8>;
        };

        td_mouse: tap_dance_media {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 6>;
        };

        td_sym: tap_dance_fun {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 9>;
        };
    };

    // no tri-layer
    //conditional_layers {
    //    compatible = "zmk,conditional-layers";
    //    tri_layer {
    //        if-layers = <1 2>;
    //        then-layer = <3>;
    //    };
    //};

    keymap {
        compatible = "zmk,keymap";
        base_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            HRML(A,        S,         D,         F)     &kp G          &kp H      HRMR(J,        K,         L,        SQT)
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M     &kp COMMA   &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            TRLL(BKSP,   ENTER  )     TRLR(SPACE,   TAB   )
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        extra_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            HRML(A,        S,         D,         F)     &kp G          &kp H      HRMR(J,        K,         L,        SQT)
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M     &kp COMMA   &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            TRLL(BKSP,   ENTER  )     TRLR(SPACE,   TAB   )
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        // based on miryoku tap QWERTY flip
        tap_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
             &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
             &kp A      &kp S      &kp D      &kp F      &kp G          &kp H      &kp J      &kp K      &kp L     &kp QUOT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M     &kp COMMA   &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &kp BKSP  &kp ENTER      &kp SPACE   &kp TAB
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        button_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &LG(Z)      &LG(X)    &LG(C)      &LG(V)   &LG(&LS(Z))   &LG(&LS(Z))   &LG(V)     &LG(C)     &LG(X)     &LG(Z)
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
           &kp LCTRL   &kp LALT   &kp LGUI  &kp LSHFT    &none          &none    &kp LSHFT   &kp LGUI   &kp LALT   &kp LCTL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &LG(Z)      &LG(X)    &LG(C)      &LG(V)   &LG(&LS(Z))   &LG(&LS(Z))   &LG(V)     &LG(C)     &LG(X)     &LG(Z)
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &mkp RCLK  &mkp LCLK       &mkp LCLK  $mkp RCLK
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        // based on MIRYOKU_ALTERNATIVES_NAV_INVERTEDT_FLIP  and  MIRYOKU_CLIPBOARD_MAC
        nav_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
           &kp PG_UP   &kp HOME   &kp UP      &kp END   &kp INS         &none     &td_base   &td_extra  &td_tap    &td_boot
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
           &kp PG_DN   &kp LEFT   &kp DOWN   &kp RIGHT &caps_word       &none    &kp LSHFT   &kp LGUI   &kp LALT   &kp LCTL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &LG(Z)      &LG(X)    &LG(C)      &LG(V)   &LS(&LG(Z))      $none     &td_nav    &td_num    &kp RALT    &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &kp BSPC   &kp ENT         &none      &none
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        // based on MIRYOKU_ALTERNATIVES_MOUSE_INVERTEDT_FLIP  and  MIRYOKU_CLIPBOARD_MAC
        mouse_layer {
            bindings = <
        //╭────────────────┬────────────────┬────────────────┬────────────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &msc SCROLL_UP  &msc SCROLL_LEFT   &mmv MOVE_UP  &msc SCROLL_RIGHT   &none          &none     &td_base   &td_extra  &td_tap    &td_boot
        //├────────────────┼────────────────┼────────────────┼────────────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
           &msc SCROLL_DOWN  &mmv MOVE_LEFT   &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &none          &none    &kp LSHFT   &kp LGUI   &kp LALT   &kp LCTL
        //├────────────────┼────────────────┼────────────────┼────────────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                &LG(Z)           &LG(X)           &LG(C)           &LG(V)      &LS(&LG(Z))      &none    &td_mouse   &td_sym    &kp RALT    &none
        //╰────────────────┴────────────────┴────────────────┼────────────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                                                    &mkp RCLK  &mkp LCLK        &none      &none
        //                                                         ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        media_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
             &none      &none   &kp C_VOL_UP  &none      &none          &none     &td_base   &td_extra  &td_tap    &td_boot
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
             &none   &kp C_PREV &kp C_VOL_DN &kp C_NEXT  &none          &none    &kp LSHFT   &kp LGUI   &kp LALT   &kp LCTL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
             &none      &none      &none      &none      &none          &none    &td_media   &td_fun    &kp RALT    &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &kp BKSP   &kp ENT         &none      &none
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        num_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &td_boot   &td_tap   &td_extra   &td_base    &none         &kp LBKT    &kp N7     &kp N8     &kp N9    &kp RBKT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
           &kp LCTRL   &kp LALT   &kp LGUI  &kp LSHFT    &none        &kp EQUAL    &kp N4     &kp N5     &kp N6    &kp SEMI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
             &none     &kp RALT   &td_nav    &td_num     &none         &kp BSLH    &kp N1     &kp N2     &kp N3    &kp SLSH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                              &none      &none        &kp MINUS    &kp N0
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        sym_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &td_boot   &td_tap   &td_extra   &td_base    &none         &kp LBRC   &kp AMPS  &kp ASTRK   &kp LPRN   &kp RBRC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
           &kp LCTRL   &kp LALT   &kp LGUI  &kp LSHFT    &none         &kp PLUS   &kp DLLR  &kp PRCNT  &kp CARET  &kp COLON
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
             &none     &kp RALT   &td_nav    &td_num     &none         &kp PIPE   &kp EXCL   &kp AT     &kp HASH  &KP TILDE
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                              &none      &none        &kp UNDER   &kp LPRN
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        fun_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &td_boot   &td_tap   &td_extra   &td_base    &none        &kp PSCRN    &kp F7     &kp F8     &kp F9    &kp F12 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
           &kp LCTRL   &kp LALT   &kp LGUI  &kp LSHFT    &none        &kp LSLCK    &kp F4     &kp F5     &kp F6    &kp F11
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
             &none     &kp RALT   &td_nav    &td_num     &none      &kp PAUSE_BREAK &kp F1    &kp F2     &kp F3    &kp F10
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                              &none      &none         &kp SPC   &kp K_MENU
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};